{"version":3,"sources":["components/RegisterForm.js","components/RegisterFormContainer.js","views/RegisterPage.js"],"names":["Form","styled","form","props","shadow","Label","label","error","css","Input","input","isValid","Button","button","ErrorText","div","HelpText","span","LinkContainer","MyLink","Link","withThemeContext","AnimationStartID","AnimationEndID","notice","apearNotice","theme","registrate","hasError","Notification","message","includes","serverError","initialValues","name","email","password","validate","values","errors","length","onSubmit","setSubmitting","resetForm","touched","handleChange","handleBlur","handleSubmit","isSubmitting","config","mainShadowBox","type","onChange","onBlur","value","disabled","to","routesPaths","login","RegisterFormContainer","state","register","onRegister","setState","setTimeout","newUser","errorOnLog","clearTimeout","this","Component","mapDispatchToProps","authOperations","connect","authSelectors","getError","RegisterPage"],"mappings":"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","file":"static/js/register-page.4a84ff54.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Formik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport withThemeContext from './hoc/withTheme';\r\nimport routesPaths from '../routesPaths';\r\nimport Notification from './Notification';\r\n\r\nconst Form = styled.form`\r\n  margin: 0 auto 3.4rem;\r\n  max-width: 46rem;\r\n  box-shadow: ${props => props.shadow};\r\n  border-radius: 6%;\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  background-color: #dae3ff;\r\n\r\n  @media screen and (min-width: 30em) {\r\n    padding: 2.6rem 3rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    padding: 3.6rem;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  font-size: 1.8rem;\r\n  font-family: 'Philosopher', sans-serif;\r\n  transition: all 0.1s linear;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.error &&\r\n    css`\r\n      color: red;\r\n    `}\r\n\r\n  @media screen and (min-width: 30em) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: none;\r\n  font-size: 1.5rem;\r\n  width: 100%;\r\n  margin-bottom: 1.6rem;\r\n  padding: 1rem;\r\n  border-radius: 3rem;\r\n  border: 0.2rem solid snow;\r\n  background-color: snow;\r\n\r\n  &:focus {\r\n    border-color: #1d2bcc;\r\n  }\r\n\r\n  ${props =>\r\n    props.isValid &&\r\n    css`\r\n      border: 0.2rem solid lightgreen;\r\n    `}\r\n  ${props =>\r\n    props.error &&\r\n    css`\r\n      border: 0.2rem solid red;\r\n    `}\r\n\r\n    @media screen and (min-width: 30em) {\r\n    font-size: 1.8rem;\r\n    margin-bottom: 1.8rem;\r\n    padding: 1.2rem 1.4rem 1rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    margin-bottom: 2rem;\r\n    padding: 1.2rem 1.6rem 1rem;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  margin: 0 auto;\r\n  width: 10rem;\r\n  padding: 1.4rem;\r\n  border: none;\r\n  border-radius: 1rem;\r\n  background-color: #4a69cf;\r\n  cursor: pointer;\r\n  color: snow;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #404fff;\r\n    color: snow;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #7883ff;\r\n  }\r\n\r\n  @media screen and (min-width: 30em) {\r\n    width: 12rem;\r\n    padding: 1.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 1.8rem;\r\n    width: 14rem;\r\n    padding: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  position: absolute;\r\n  top: 6rem;\r\n  color: red;\r\n  font-size: 1.4rem;\r\n\r\n  @media screen and (min-width: 30em) {\r\n    top: 6.8rem;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    top: 7.2rem;\r\n  }\r\n`;\r\n\r\nconst HelpText = styled.span`\r\n  font-size: 1.2rem;\r\n  font-family: 'Roboto', sans-serif;\r\n`;\r\n\r\nconst LinkContainer = styled.div`\r\n  display: inline-block;\r\n  margin: 2rem auto 0;\r\n`;\r\n\r\nconst MyLink = styled(Link)`\r\n  color: #1d2bcc;\r\n  transition: color 0.2s linear;\r\n  font-size: 2rem;\r\n  font-family: 'Philosopher', sans-serif;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: tomato;\r\n  }\r\n\r\n  &:active {\r\n    color: red;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nfunction RegisterForm({ notice, apearNotice, theme, registrate, hasError }) {\r\n  return (\r\n    <>\r\n      <Notification message={notice} apearNotice={apearNotice} />\r\n      {hasError && hasError.includes('400') && (\r\n        <Notification\r\n          message=\"Sorry, but it seems that name or email is already signed up ðŸ˜ž choose another one\"\r\n          apearNotice={apearNotice}\r\n        />\r\n      )}\r\n      {hasError && hasError.includes('401') && (\r\n        <Notification serverError={true} apearNotice={true} />\r\n      )}\r\n      <Formik\r\n        initialValues={{ name: '', email: '', password: '' }}\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.name) {\r\n            errors.name = <ErrorText>Name is Required</ErrorText>;\r\n          }\r\n          if (!values.email) {\r\n            errors.email = <ErrorText>Email is Required</ErrorText>;\r\n          }\r\n          if (values.email && !values.email.includes('@')) {\r\n            errors.email = (\r\n              <ErrorText>Email needs to include \"@\" symbol</ErrorText>\r\n            );\r\n          }\r\n          if (!values.password) {\r\n            errors.password = <ErrorText>Password is Required</ErrorText>;\r\n          }\r\n          if (values.password && values.password.length < 7) {\r\n            errors.password = (\r\n              <ErrorText>Password need to be more than 7 symbols</ErrorText>\r\n            );\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          registrate(values.name, values.email, values.password);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit} shadow={theme.config.mainShadowBox}>\r\n            {errors.name && touched.name ? (\r\n              <Label error>\r\n                Name\r\n                <Input\r\n                  error\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.name}\r\n                />\r\n                {errors.name && touched.name && errors.name}\r\n              </Label>\r\n            ) : (\r\n              <Label>\r\n                Name\r\n                {touched.name ? (\r\n                  <Input\r\n                    isValid\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  />\r\n                )}\r\n                {errors.name && touched.name && errors.name}\r\n              </Label>\r\n            )}\r\n\r\n            {errors.email && touched.email ? (\r\n              <Label error>\r\n                Email\r\n                <Input\r\n                  error\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.email}\r\n                />\r\n                {errors.email && touched.email && errors.email}\r\n              </Label>\r\n            ) : (\r\n              <Label>\r\n                Email\r\n                {touched.email ? (\r\n                  <Input\r\n                    isValid\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                  />\r\n                )}\r\n                {errors.email && touched.email && errors.email}\r\n              </Label>\r\n            )}\r\n\r\n            {errors.password && touched.password ? (\r\n              <Label error>\r\n                Password <HelpText>(need to be 7+ symbols)</HelpText>\r\n                <Input\r\n                  error\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.password}\r\n                />\r\n                {errors.password && touched.password && errors.password}\r\n              </Label>\r\n            ) : (\r\n              <Label>\r\n                Password <HelpText>(need to be 7+ symbols)</HelpText>\r\n                {touched.password ? (\r\n                  <Input\r\n                    isValid\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                  />\r\n                )}\r\n                {errors.password && touched.password && errors.password}\r\n              </Label>\r\n            )}\r\n            <Button type=\"submit\" disabled={isSubmitting}>\r\n              Sign up\r\n            </Button>\r\n            <LinkContainer>\r\n              <MyLink to={routesPaths.login}>Log In</MyLink>\r\n            </LinkContainer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withThemeContext(RegisterForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport withThemeContext from './hoc/withTheme';\r\nimport { authOperations, authSelectors } from '../redux/auth';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nlet AnimationStartID;\r\nlet AnimationEndID;\r\n\r\nclass RegisterFormContainer extends Component {\r\n  state = {\r\n    apearNotice: false,\r\n    notice: null,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(AnimationStartID);\r\n    clearTimeout(AnimationEndID);\r\n  }\r\n\r\n  register = (name, email, password) => {\r\n    const { onRegister } = this.props;\r\n    const checkedPassword = password.length >= 7;\r\n    if (!checkedPassword) {\r\n      this.setState({\r\n        notice: 'Hey! Password need to be longer than 7 symbols :)',\r\n        apearNotice: true,\r\n      });\r\n      return setTimeout(\r\n        () =>\r\n          this.setState({\r\n            apearNotice: false,\r\n          }),\r\n        2400,\r\n      );\r\n    }\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password,\r\n    };\r\n    this.errorOnLog();\r\n    onRegister(newUser);\r\n  };\r\n\r\n  errorOnLog = () => {\r\n    AnimationStartID = setTimeout(\r\n      () =>\r\n        this.setState({\r\n          apearNotice: true,\r\n        }),\r\n      1000,\r\n    );\r\n    AnimationEndID = setTimeout(\r\n      () =>\r\n        this.setState({\r\n          apearNotice: false,\r\n        }),\r\n      5600,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <RegisterForm\r\n        {...this.props}\r\n        registrate={this.register}\r\n        apearNotice={this.state.apearNotice}\r\n        notice={this.state.notice}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  hasError: authSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withThemeContext(RegisterFormContainer));\r\n","import React from 'react';\r\nimport RegisterForm from '../components/RegisterFormContainer';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <>\r\n      <RegisterForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"sourceRoot":""}