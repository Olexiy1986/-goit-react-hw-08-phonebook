{"version":3,"sources":["../node_modules/@material-ui/icons/Close.js","components/transitions/slideItem.module.css","components/transitions/slideList.module.css","components/transitions/scale.module.css","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/Modals/ModalAddContact.js","components/ContactForm.js","components/ContactFormContainer.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","components/TextNotification.js","components/ContactList/ListItem.js","components/ContactList/ListItemContainer.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Filter.js","components/FilterContainer.js","views/ContactsPage.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","module","addContact","name","number","dispatch","contactsActions","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","fetchExistContacts","fetchExistContactsRequest","get","fetchExistContactsSuccess","fetchExistContactsError","removeContact","id","removeContactRequest","delete","removeContactSuccess","removeContactError","message","getContacts","contacts","items","getFilter","filter","getLoading","loading","getError","getVisibleContacts","createSelector","toLowerCase","includes","getTaskById","state","contactId","find","ModalContainer","styled","div","ButtonAdd","button","CloseButton","Form","form","Label","label","props","css","Input","input","isValid","ModalButtonAdd","ErrorText","ModalWindow","isModalOpen","handleOpen","setState","handleClose","this","text","theme","onAccept","type","color","variant","onClick","Modal","open","onClose","aria-labelledby","aria-describedby","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","result","touched","handleChange","handleBlur","handleSubmit","isSubmitting","backGroundColor","config","inputColor","onChange","onBlur","disabled","Component","withThemeContext","Container","ContactForm","notice","apearNotice","hasError","Notification","serverError","ContactFormContainer","onAddContact","contact","setTimeout","test","mapDispatchToProps","ContactsOperations","connect","contactsSelectors","getChildMapping","children","mapFn","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","_objectWithoutPropertiesLoose","React","TransitionGroupContext","Provider","propTypes","defaultProps","Text","p","messageColor","Item","li","shadow","Name","Number","Button","ListItem","onRemoveContact","viewName","viewNumber","slice","mainShadowBox","fontSize","ownProps","contactsOperations","AlternativeContainer","List","ul","ContactList","visibleContacts","CSSTransition","timeout","classNames","slideListTransition","slideItemTransition","unmountOnExit","Filter","onChangeFilter","scaleTransition","target","FilterContainer","toAppear","toUnAppear","prevProps","prevState","changeFilter","ContactsPage","onFetchExistContacts","isLoadingContacts","Spinner"],"mappings":"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","file":"static/js/contacts-page.bd75f21b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideItem_enter__29BM1\",\"enterActive\":\"slideItem_enterActive__1Gvhn\",\"exit\":\"slideItem_exit__3ynuf\",\"exitActive\":\"slideItem_exitActive__2vdB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"slideList_appear__I-AxA\",\"appearActive\":\"slideList_appearActive__jOQdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"scale_enter__ANKle\",\"enterActive\":\"scale_enterActive__3BXtN\",\"exit\":\"scale_exit__3xJJH\",\"exitActive\":\"scale_exitActive__1WRSP\",\"exitDone\":\"scale_exitDone__2GEUh\"};","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst fetchExistContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchExistContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) =>\r\n      dispatch(contactsActions.fetchExistContactsSuccess(data)),\r\n    )\r\n    .catch(error => dispatch(contactsActions.fetchExistContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n    .catch(error =>\r\n      dispatch(contactsActions.removeContactError(error.message)),\r\n    );\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchExistContacts,\r\n  removeContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = ({ contacts }) => contacts.loading;\r\nconst getContacts = ({ contacts }) => contacts.items;\r\nconst getFilter = ({ contacts }) => contacts.filter;\r\nconst getError = ({ contacts }) => contacts.error;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(\r\n      ({ name, number }) =>\r\n        name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        number.includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\nconst getTaskById = createSelector(\r\n  [(state, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => contacts.find(({ id }) => id === contactId),\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getError,\r\n  getVisibleContacts,\r\n  getTaskById,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Modal } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport withThemeContext from '../hoc/withTheme';\r\n\r\nconst ModalContainer = styled.div`\r\n  border-radius: 2rem;\r\n  background-color: #dae3ff;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  outline: none;\r\n`;\r\n\r\nconst ButtonAdd = styled.button`\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  position: absolute;\r\n  top: -5rem;\r\n  left: 1rem;\r\n  width: 12rem;\r\n  padding: 1.4rem;\r\n  border: none;\r\n  border-radius: 1rem;\r\n  background-color: #4a69cf;\r\n  cursor: pointer;\r\n  color: snow;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #404fff;\r\n    color: snow;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #7883ff;\r\n  }\r\n\r\n  @media screen and (min-width: 30em) {\r\n    padding: 1.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    top: 1rem;\r\n    left: -11rem;\r\n    font-size: 1.8rem;\r\n    width: 14rem;\r\n    padding: 1.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 60em) {\r\n    left: -13rem;\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  display: inline-block;\r\n  margin-left: auto;\r\n  border: none;\r\n  font-size: 3rem;\r\n  border-top-right-radius: 2rem;\r\n  border-bottom-left-radius: 1rem;\r\n  flex-basis: 8%;\r\n  height: 3.8rem;\r\n  width: 3.8rem;\r\n  background-color: #e82a2a;\r\n  cursor: pointer;\r\n  color: snow;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #b80000;\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #ff8080;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 28rem;\r\n  padding: 0 2rem 2rem;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  background-color: #dae3ff;\r\n  border-bottom-left-radius: 2rem;\r\n  border-bottom-right-radius: 2rem;\r\n\r\n  @media screen and (min-width: 26em) {\r\n    width: 34rem;\r\n  }\r\n\r\n  @media screen and (min-width: 30em) {\r\n    padding: 0 2.6rem 2.6rem;\r\n    width: 40rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    padding: 0 3.6rem 2.6rem;\r\n    width: 46rem;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  font-size: 1.8rem;\r\n  font-family: 'Philosopher', sans-serif;\r\n  transition: all 0.1s linear;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.error &&\r\n    css`\r\n      color: red;\r\n    `}\r\n\r\n  @media screen and (min-width: 30em) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: none;\r\n  font-size: 1.5rem;\r\n  width: 100%;\r\n  margin-bottom: 1.6rem;\r\n  padding: 1rem;\r\n  border-radius: 3rem;\r\n  border: 0.2rem solid snow;\r\n  background-color: snow;\r\n\r\n  &:focus {\r\n    border-color: #1d2bcc;\r\n  }\r\n\r\n  ${props =>\r\n    props.isValid &&\r\n    css`\r\n      border: 0.2rem solid lightgreen;\r\n    `}\r\n  ${props =>\r\n    props.error &&\r\n    css`\r\n      border: 0.2rem solid red;\r\n    `}\r\n\r\n    @media screen and (min-width: 30em) {\r\n    font-size: 1.8rem;\r\n    margin-bottom: 1.8rem;\r\n    padding: 1.2rem 1.4rem 1rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    margin-bottom: 2rem;\r\n    padding: 1.2rem 1.6rem 1rem;\r\n  }\r\n`;\r\n\r\nconst ModalButtonAdd = styled(ButtonAdd)`\r\n  position: static;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  position: absolute;\r\n  top: 6rem;\r\n  color: red;\r\n  font-size: 1.4rem;\r\n\r\n  @media screen and (min-width: 30em) {\r\n    top: 6.4rem;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    top: 6.8rem;\r\n  }\r\n`;\r\n\r\nclass ModalWindow extends Component {\r\n  state = {\r\n    isModalOpen: false,\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      isModalOpen: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isModalOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isModalOpen } = this.state;\r\n    const { text, theme, onAccept } = this.props;\r\n    return (\r\n      <>\r\n        <ButtonAdd\r\n          type=\"button\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={this.handleOpen}\r\n        >\r\n          {text}\r\n        </ButtonAdd>\r\n        <Modal\r\n          open={isModalOpen}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <ModalContainer>\r\n            <CloseButton onClick={this.handleClose}>×</CloseButton>\r\n            <Formik\r\n              initialValues={{ name: '', number: '' }}\r\n              validate={values => {\r\n                const errors = {};\r\n                if (!values.name) {\r\n                  errors.name = <ErrorText>Name is Required</ErrorText>;\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                const result = onAccept(values.name, values.number);\r\n                setSubmitting(false);\r\n                if (result !== false) {\r\n                  resetForm();\r\n                  this.handleClose();\r\n                }\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  {errors.name ? (\r\n                    <Label error>\r\n                      Name\r\n                      <Input\r\n                        error\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        backGroundColor={theme.config.inputColor}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.name}\r\n                      />\r\n                      {errors.name && touched.name && errors.name}\r\n                    </Label>\r\n                  ) : (\r\n                    <Label>\r\n                      Name\r\n                      {touched.name ? (\r\n                        <Input\r\n                          isValid\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          backGroundColor={theme.config.inputColor}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.name}\r\n                        />\r\n                      ) : (\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          backGroundColor={theme.config.inputColor}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.name}\r\n                        />\r\n                      )}\r\n                      {errors.name && touched.name && errors.name}\r\n                    </Label>\r\n                  )}\r\n\r\n                  <Label>\r\n                    Number\r\n                    <Input\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      backGroundColor={theme.config.inputColor}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.number}\r\n                    />\r\n                    {errors.number && touched.number && errors.number}\r\n                  </Label>\r\n                  <ModalButtonAdd type=\"submit\" disabled={isSubmitting}>\r\n                    Add contact\r\n                  </ModalButtonAdd>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </ModalContainer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withThemeContext(ModalWindow);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Modal from './Modals/ModalAddContact';\r\nimport Notification from './Notification';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nfunction ContactForm({ notice, apearNotice, hasError, addContact }) {\r\n  return (\r\n    <Container>\r\n      <Notification message={notice} apearNotice={apearNotice} />\r\n      {hasError && !hasError.includes('401') && (\r\n        <Notification message={hasError} apearNotice={true} />\r\n      )}\r\n      {hasError && hasError.includes('401') && (\r\n        <Notification serverError={true} apearNotice={true} />\r\n      )}\r\n      <Modal onAccept={addContact} text=\"Add Contact\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport withThemeContext from './hoc/withTheme';\r\nimport ContactsOperations from '../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport ContactForm from './ContactForm';\r\n\r\nclass ContactFormContainer extends Component {\r\n  state = {\r\n    apearNotice: false,\r\n    notice: null,\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts, onAddContact } = this.props;\r\n    const checkedForName = contacts.find(contact => name === contact.name);\r\n    if (checkedForName) {\r\n      this.setState({\r\n        notice: `${name} is already in contacts`,\r\n        apearNotice: true,\r\n      });\r\n\r\n      setTimeout(\r\n        () =>\r\n          this.setState({\r\n            apearNotice: false,\r\n          }),\r\n        2600,\r\n      );\r\n\r\n      return false;\r\n    }\r\n\r\n    const numberCheck = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/g;\r\n    const checkedNumber = numberCheck.test(number);\r\n    if (!checkedNumber) {\r\n      this.setState({\r\n        notice: 'Hey! This is not a real number :)',\r\n        apearNotice: true,\r\n      });\r\n      setTimeout(\r\n        () =>\r\n          this.setState({\r\n            apearNotice: false,\r\n          }),\r\n        2600,\r\n      );\r\n      return false;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n    onAddContact(newContact);\r\n  };\r\n  render() {\r\n    return (\r\n      <ContactForm\r\n        {...this.props}\r\n        addContact={this.addContact}\r\n        apearNotice={this.state.apearNotice}\r\n        notice={this.state.notice}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n    hasError: contactsSelectors.getError(state),\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onAddContact: obj => dispatch(ContactsActions.addContact(obj)),\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: ContactsOperations.addContact,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withThemeContext(ContactFormContainer));\r\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport withThemeContext from './hoc/withTheme';\r\n\r\nconst Text = styled.p`\r\n  font-size: 2.4rem;\r\n  color: ${props => props.color};\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst TextNotification = ({ message, theme }) => {\r\n  return <Text color={theme.config.messageColor}>{message}</Text>;\r\n};\r\n\r\nexport default withThemeContext(TextNotification);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Item = styled.li`\r\n  box-shadow: ${props => props.shadow};\r\n  padding: 1rem 1.4rem;\r\n  border-radius: 1.6rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  background-color: snow;\r\n  margin-bottom: 0.6rem;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 30em) {\r\n    padding: 1.2rem 1.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    padding: 1.4rem 1.6rem;\r\n  }\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 1.8rem;\r\n  flex-basis: 48%;\r\n  font-weight: 500;\r\n\r\n  @media screen and (min-width: 30em) {\r\n    flex-basis: 50%;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2rem;\r\n    flex-basis: 52%;\r\n  }\r\n`;\r\n\r\nconst Number = styled.p`\r\n  font-size: 1.6rem;\r\n  flex-basis: 34%;\r\n  font-weight: 500;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 1.8rem;\r\n    flex-basis: 36%;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  font-size: 3rem;\r\n  margin-left: 0.4rem;\r\n  max-width: 4rem;\r\n  min-width: 4rem;\r\n  max-height: 4rem;\r\n  min-height: 4rem;\r\n  border-radius: 0.8rem;\r\n  background-color: #e82a2a;\r\n  cursor: pointer;\r\n  color: snow;\r\n  transition: all 0.4s ease;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #b80000;\r\n    outline: none;\r\n    transform: rotate(0.5turn);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #ff8080;\r\n  }\r\n`;\r\n\r\nfunction ListItem({ name, number, onRemoveContact, theme }) {\r\n  let viewName = name;\r\n  let viewNumber = number;\r\n  if (name) {\r\n    viewName = name.length > 12 ? `${name.slice(0, 12)}...` : name;\r\n  }\r\n  if (number) {\r\n    viewNumber = number.length > 17 ? `${number.slice(0, 17)}...` : number;\r\n  }\r\n\r\n  return (\r\n    <Item shadow={theme.config.mainShadowBox}>\r\n      <Name>{viewName}</Name> <Number>{viewNumber}</Number>\r\n      <Button type=\"button\" onClick={onRemoveContact}>\r\n        <CloseIcon fontSize=\"large\" />{' '}\r\n      </Button>\r\n    </Item>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import { connect } from 'react-redux';\r\nimport withThemeContext from '../hoc/withTheme';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport ListItem from './ListItem';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...contactsSelectors.getTaskById(state, ownProps.id),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onRemoveContact: () =>\r\n      dispatch(contactsOperations.removeContact(ownProps.id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withThemeContext(ListItem));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport TextNotification from '../TextNotification';\r\nimport ListItem from './ListItemContainer';\r\nimport slideItemTransition from '../transitions/slideItem.module.css';\r\nimport slideListTransition from '../transitions/slideList.module.css';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 44rem;\r\n  padding-bottom: 2rem;\r\n\r\n  @media screen and (min-width: 60em) {\r\n    max-width: 48rem;\r\n  }\r\n`;\r\n\r\nconst AlternativeContainer = styled(Container)`\r\n  margin-top: 8rem;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nfunction ContactList({ contacts, visibleContacts, appear }) {\r\n  return (\r\n    <>\r\n      {contacts.length < 2 ? (\r\n        <AlternativeContainer>\r\n          <CSSTransition\r\n            timeout={500}\r\n            classNames={{ ...slideListTransition }}\r\n            in={true}\r\n            appear\r\n          >\r\n            <TransitionGroup component={List}>\r\n              {visibleContacts.map(({ id }) => (\r\n                <CSSTransition\r\n                  key={id}\r\n                  timeout={250}\r\n                  classNames={slideItemTransition}\r\n                  in={appear}\r\n                  unmountOnExit\r\n                >\r\n                  <ListItem id={id} />\r\n                </CSSTransition>\r\n              ))}\r\n            </TransitionGroup>\r\n          </CSSTransition>\r\n          {contacts.length === 0 && (\r\n            <TextNotification message={'You have no contacts. Add some :)'} />\r\n          )}\r\n          {contacts.length > 1 && visibleContacts.length === 0 && (\r\n            <TextNotification message={'No contacts found :('} />\r\n          )}\r\n        </AlternativeContainer>\r\n      ) : (\r\n        <Container>\r\n          <CSSTransition\r\n            timeout={500}\r\n            classNames={{ ...slideListTransition }}\r\n            in={true}\r\n            appear\r\n          >\r\n            <TransitionGroup component={List}>\r\n              {visibleContacts.map(({ id }) => (\r\n                <CSSTransition\r\n                  key={id}\r\n                  timeout={250}\r\n                  classNames={slideItemTransition}\r\n                  in={appear}\r\n                  unmountOnExit\r\n                >\r\n                  <ListItem id={id} />\r\n                </CSSTransition>\r\n              ))}\r\n            </TransitionGroup>\r\n          </CSSTransition>\r\n          {contacts.length === 0 && (\r\n            <TextNotification message={'You have no contacts. Add some :)'} />\r\n          )}\r\n          {contacts.length > 1 && visibleContacts.length === 0 && (\r\n            <TextNotification message={'No contacts found :('} />\r\n          )}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  visibleContacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport scaleTransition from './transitions/scale.module.css';\r\n\r\nconst Container = styled.div`\r\n  border-radius: 2.2rem;\r\n  margin: 0 auto 2.6rem;\r\n  margin-top: 8rem;\r\n  max-width: 44rem;\r\n  box-shadow: ${props => props.shadow};\r\n  padding: 1rem 1.4rem;\r\n  background-color: #dae3ff;\r\n\r\n  @media screen and (min-width: 30em) {\r\n    padding: 1.4rem 2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 60em) {\r\n    padding: 2rem;\r\n    max-width: 48rem;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 1.8rem;\r\n  font-weight: 500;\r\n  font-family: 'Philosopher', sans-serif;\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 30em) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: none;\r\n  font-size: 1.8rem;\r\n  width: 100%;\r\n  margin-top: 0.1rem;\r\n  padding: 1rem;\r\n  border-radius: 3rem;\r\n  border: 0.2rem solid snow;\r\n  background-color: ${props => props.backGroundColor};\r\n\r\n  &:focus {\r\n    border-color: #1d2bcc;\r\n  }\r\n\r\n  @media screen and (min-width: 30em) {\r\n    font-size: 1.8rem;\r\n    padding: 1.2rem 1.4rem 1rem;\r\n  }\r\n  @media screen and (min-width: 48em) {\r\n    padding: 1.2rem 1.6rem 1rem;\r\n  }\r\n`;\r\n\r\nfunction Filter({ value, onChangeFilter, theme, appear }) {\r\n  return (\r\n    <CSSTransition\r\n      timeout={250}\r\n      classNames={scaleTransition}\r\n      in={appear}\r\n      unmountOnExit\r\n    >\r\n      <Container shadow={theme.config.mainShadowBox}>\r\n        <Label>\r\n          Find contacts\r\n          <Input\r\n            backGroundColor={theme.config.inputColor}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={({ target: { value } }) => onChangeFilter(value)}\r\n          />\r\n        </Label>\r\n      </Container>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../redux/contacts/contactsActions';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport withThemeContext from './hoc/withTheme';\r\nimport Filter from './Filter';\r\n\r\nclass FilterContainer extends Component {\r\n  state = {\r\n    appear: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { contacts } = this.props;\r\n    if (contacts.length <= 1) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      appear: true,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.contacts.length !== this.props.contacts.length) {\r\n      const { contacts } = this.props;\r\n      if (contacts.length > 1) {\r\n        return this.toAppear();\r\n      }\r\n      if (contacts.length <= 1) {\r\n        return this.toUnAppear();\r\n      }\r\n    }\r\n  }\r\n\r\n  toAppear = () => {\r\n    this.setState({\r\n      appear: true,\r\n    });\r\n  };\r\n\r\n  toUnAppear = () => {\r\n    this.setState({\r\n      appear: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { appear } = this.state;\r\n    return <Filter {...this.props} appear={appear} />;\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onChangeFilter: str => dispatch(filterActions.changeFilter(str)),\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withThemeContext(FilterContainer));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport Spinner from '../components/Spinner';\r\nimport ContactForm from '../components/ContactFormContainer';\r\nimport ContactList from '../components/ContactList/ContactListContainer';\r\nimport Filter from '../components/FilterContainer';\r\n\r\nclass ContactsPage extends Component {\r\n  componentDidMount() {\r\n    const { onFetchExistContacts } = this.props;\r\n    return onFetchExistContacts();\r\n  }\r\n\r\n  render() {\r\n    const { isLoadingContacts } = this.props;\r\n    return (\r\n      <>\r\n        {isLoadingContacts && <Spinner />}\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingContacts: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchExistContacts: contactsOperations.fetchExistContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\r\n"],"sourceRoot":""}